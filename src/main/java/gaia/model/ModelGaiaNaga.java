package gaia.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.relauncher.SideOnly;

@SideOnly(Side.CLIENT)
public class ModelGaiaNaga extends ModelBase {
	ModelRenderer head;
	ModelRenderer headnose1;
	ModelRenderer headnose2;
	ModelRenderer headjaw;
	ModelRenderer headtendrils;
	ModelRenderer rightfin;
	ModelRenderer leftfin;
	ModelRenderer pauldron;
	ModelRenderer body;
	ModelRenderer body2;
	ModelRenderer fin1;
	ModelRenderer fin2;
	ModelRenderer rightarm;
	public static ModelRenderer rightarmlower;
	ModelRenderer leftarm;
	ModelRenderer leftarmlower;
	ModelRenderer waist;
	ModelRenderer tail1;
	ModelRenderer tail2;
	ModelRenderer tail3;
	ModelRenderer tail4;
	ModelRenderer tail5;
	ModelRenderer tail6;
	ModelRenderer tail7;
	ModelRenderer tail8;

	public ModelGaiaNaga() {
		this.textureWidth = 128;
		this.textureHeight = 64;

		this.head = new ModelRenderer(this, 0, 0);
		this.head.addBox(-3F, -5F, -3F, 6, 5, 7);
		this.head.setRotationPoint(0F, -6F, -3F);
		this.head.setTextureSize(128, 64);
		this.head.mirror = true;
		this.setRotation(head, 0F, 0F, 0F);
		this.headnose1 = new ModelRenderer(this, 0, 12);
		this.headnose1.addBox(-1F, -4F, -5F, 2, 1, 2);
		this.headnose1.setRotationPoint(0F, -6F, -3F);
		this.headnose1.setTextureSize(128, 64);
		this.headnose1.mirror = true;
		this.setRotation(headnose1, 0F, 0F, 0F);
		this.headnose2 = new ModelRenderer(this, 0, 15);
		this.headnose2.addBox(-2F, -3F, -6F, 4, 2, 3);
		this.headnose2.setRotationPoint(0F, -6F, -3F);
		this.headnose2.setTextureSize(128, 64);
		this.headnose2.mirror = true;
		this.setRotation(headnose2, 0F, 0F, 0F);
		this.headjaw = new ModelRenderer(this, 0, 20);
		this.headjaw.addBox(-2.5F, -2F, -6.5F, 5, 3, 6);
		this.headjaw.setRotationPoint(0F, -6F, -3F);
		this.headjaw.setTextureSize(128, 64);
		this.headjaw.mirror = true;
		this.setRotation(headjaw, 0F, 0F, 0F);
		this.headtendrils = new ModelRenderer(this, 0, 29);
		this.headtendrils.addBox(-3F, -1F, -6.5F, 6, 6, 6);
		this.headtendrils.setRotationPoint(0F, -6F, -3F);
		this.headtendrils.setTextureSize(128, 64);
		this.headtendrils.mirror = true;
		this.setRotation(headtendrils, 0F, 0F, 0F);
		this.rightfin = new ModelRenderer(this, 19, -3);
		this.rightfin.addBox(-3F, -5F, 0F, 0, 5, 3);
		this.rightfin.setRotationPoint(0F, -6F, -3F);
		this.rightfin.setTextureSize(128, 64);
		this.rightfin.mirror = true;
		this.setRotation(rightfin, 0F, -0.5235988F, 0F);
		this.leftfin = new ModelRenderer(this, 19, -3);
		this.leftfin.addBox(3F, -5F, 0F, 0, 5, 3);
		this.leftfin.setRotationPoint(0F, -6F, -3F);
		this.leftfin.setTextureSize(128, 64);
		this.leftfin.mirror = true;
		this.setRotation(leftfin, 0F, 0.5235988F, 0F);
		this.pauldron = new ModelRenderer(this, 34, 0);
		this.pauldron.addBox(-9F, -0.5F, -3F, 18, 7, 7);
		this.pauldron.setRotationPoint(0F, -7F, 0F);
		this.pauldron.setTextureSize(128, 64);
		this.pauldron.mirror = true;
		this.setRotation(pauldron, -0.1745329F, 0F, 0F);
		this.body = new ModelRenderer(this, 0, 46);
		this.body.addBox(-4.5F, -2F, -1.5F, 9, 4, 4);
		this.body.setRotationPoint(0F, -7F, 0F);
		this.body.setTextureSize(128, 64);
		this.body.mirror = true;
		this.setRotation(body, 0.2617994F, 0F, 0F);
		this.body2 = new ModelRenderer(this, 84, 0);
		this.body2.addBox(-5.5F, 0F, -2.5F, 11, 9, 6);
		this.body2.setRotationPoint(0F, -7F, 0F);
		this.body2.setTextureSize(128, 64);
		this.body2.mirror = true;
		this.setRotation(body2, -0.1745329F, 0F, 0F);
		this.fin1 = new ModelRenderer(this, 34, 24);
		this.fin1.addBox(0F, -5F, -2.5F, 0, 13, 12);
		this.fin1.setRotationPoint(0F, -7F, 0F);
		this.fin1.setTextureSize(128, 64);
		this.fin1.mirror = true;
		this.setRotation(fin1, -0.1745329F, 0F, 0F);
		this.fin2 = new ModelRenderer(this, 0, 35);
		this.fin2.addBox(0F, -9F, -3F, 0, 5, 6);
		this.fin2.setRotationPoint(0F, -6F, -3F);
		this.fin2.setTextureSize(128, 64);
		this.fin2.mirror = true;
		this.setRotation(fin2, 0F, 0F, 0F);
		this.rightarm = new ModelRenderer(this, 34, 14);
		this.rightarm.addBox(-3F, -1.5F, -1.5F, 3, 8, 3);
		this.rightarm.setRotationPoint(-5.5F, -4F, 0F);
		this.rightarm.setTextureSize(128, 64);
		this.rightarm.mirror = true;
		this.setRotation(rightarm, 0F, 0F, 0.0872665F);
		this.rightarmlower = new ModelRenderer(this, 34, 25);
		this.rightarmlower.addBox(-3F, 6.5F, -0.5F, 3, 8, 3);
		this.rightarmlower.setRotationPoint(-5.5F, -4F, 0F);
		this.rightarmlower.setTextureSize(128, 64);
		this.rightarmlower.mirror = true;
		this.setRotation(rightarmlower, -0.1745329F, 0F, 0.0872665F);
		this.leftarm = new ModelRenderer(this, 46, 14);
		this.leftarm.addBox(0F, -1.5F, -1.5F, 3, 8, 3);
		this.leftarm.setRotationPoint(5.5F, -4F, 0F);
		this.leftarm.setTextureSize(128, 64);
		this.leftarm.mirror = true;
		this.setRotation(leftarm, 0F, 0F, -0.0872665F);
		this.leftarmlower = new ModelRenderer(this, 46, 25);
		this.leftarmlower.addBox(0F, 6.5F, -0.5F, 3, 8, 3);
		this.leftarmlower.setRotationPoint(5.5F, -4F, 0F);
		this.leftarmlower.setTextureSize(128, 64);
		this.leftarmlower.mirror = true;
		this.setRotation(leftarmlower, -0.1745329F, 0F, -0.0872665F);
		this.waist = new ModelRenderer(this, 84, 15);
		this.waist.addBox(-4.5F, 9F, -2.5F, 9, 5, 5);
		this.waist.setRotationPoint(0F, -7F, 0F);
		this.waist.setTextureSize(128, 64);
		this.waist.mirror = true;
		this.setRotation(waist, -0.1308997F, 0F, 0F);
		this.tail1 = new ModelRenderer(this, 84, 25);
		this.tail1.addBox(-4F, 14F, -2.5F, 8, 3, 4);
		this.tail1.setRotationPoint(0F, -7F, 0F);
		this.tail1.setTextureSize(128, 64);
		this.tail1.mirror = true;
		this.setRotation(tail1, -0.0436332F, 0F, 0F);
		this.tail2 = new ModelRenderer(this, 84, 32);
		this.tail2.addBox(-3.5F, 17F, -2.5F, 7, 3, 4);
		this.tail2.setRotationPoint(0F, -7F, 0F);
		this.tail2.setTextureSize(128, 64);
		this.tail2.mirror = true;
		this.setRotation(tail2, 0F, 0F, 0F);
		this.tail3 = new ModelRenderer(this, 84, 39);
		this.tail3.addBox(-3F, 20F, -2.5F, 6, 3, 4);
		this.tail3.setRotationPoint(0F, -7F, 0F);
		this.tail3.setTextureSize(128, 64);
		this.tail3.mirror = true;
		this.setRotation(tail3, 0.0436332F, 0F, 0F);
		this.tail4 = new ModelRenderer(this, 84, 39);
		this.tail4.addBox(-3F, 23F, -3.5F, 6, 3, 4);
		this.tail4.setRotationPoint(0F, -7F, 0F);
		this.tail4.setTextureSize(128, 64);
		this.tail4.mirror = true;
		this.setRotation(tail4, 0.1308997F, 0F, 0F);
		this.tail5 = new ModelRenderer(this, 84, 39);
		this.tail5.addBox(-3F, 26F, -3.5F, 6, 3, 4);
		this.tail5.setRotationPoint(0F, -7F, 0F);
		this.tail5.setTextureSize(128, 64);
		this.tail5.mirror = true;
		this.setRotation(tail5, 0.1745329F, 0F, 0F);
		this.tail6 = new ModelRenderer(this, 84, 39);
		this.tail6.addBox(-3F, 28F, -1.5F, 6, 3, 4);
		this.tail6.setRotationPoint(0F, -7F, 0F);
		this.tail6.setTextureSize(128, 64);
		this.tail6.mirror = true;
		this.setRotation(tail6, 0.1745329F, 0F, 0F);
		this.tail7 = new ModelRenderer(this, 84, 46);
		this.tail7.addBox(-2.5F, 29F, 1.5F, 5, 3, 4);
		this.tail7.setRotationPoint(0F, -7F, 0F);
		this.tail7.setTextureSize(128, 64);
		this.tail7.mirror = true;
		this.setRotation(tail7, 0.1745329F, 0F, 0F);
		this.tail8 = new ModelRenderer(this, 84, 53);
		this.tail8.addBox(-2F, 30F, 4.5F, 4, 3, 4);
		this.tail8.setRotationPoint(0F, -7F, 0F);
		this.tail8.setTextureSize(128, 64);
		this.tail8.mirror = true;
		this.setRotation(tail8, 0.1745329F, 0F, 0F);
	}

	public void render(Entity entity, float par2, float par3, float par4, float par5, float par6, float par7) {
		super.render(entity, par2, par3, par4, par5, par6, par7);
		this.setRotationAngles(par2, par3, par4, par5, par6, par7);
		this.head.render(par7);
		this.headnose1.render(par7);
		this.headnose2.render(par7);
		this.headjaw.render(par7);
		this.headtendrils.render(par7);
		this.rightfin.render(par7);
		this.leftfin.render(par7);
		this.pauldron.render(par7);
		this.body.render(par7);
		this.body2.render(par7);
		this.fin1.render(par7);
		this.fin2.render(par7);
		this.rightarm.render(par7);
		this.rightarmlower.render(par7);
		this.leftarm.render(par7);
		this.leftarmlower.render(par7);
		this.waist.render(par7);
		this.tail1.render(par7);
		this.tail2.render(par7);
		this.tail3.render(par7);
		this.tail4.render(par7);
		this.tail5.render(par7);
		this.tail6.render(par7);
		this.tail7.render(par7);
		this.tail8.render(par7);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6) {
		this.head.rotateAngleY = par4 / 57.295776F;
		this.head.rotateAngleX = par5 / 57.295776F;
		this.headnose1.rotateAngleY = this.head.rotateAngleY;
		this.headnose1.rotateAngleX = this.head.rotateAngleX;
		this.headnose2.rotateAngleY = this.head.rotateAngleY;
		this.headnose2.rotateAngleX = this.head.rotateAngleX;
		this.headjaw.rotateAngleY = this.head.rotateAngleY;
		this.headjaw.rotateAngleX = this.head.rotateAngleX;
		this.headtendrils.rotateAngleY = this.head.rotateAngleY;
		this.headtendrils.rotateAngleX = this.head.rotateAngleX;
		this.rightfin.rotateAngleY = this.head.rotateAngleY - 0.5235988F;
		this.rightfin.rotateAngleX = this.head.rotateAngleX;
		this.leftfin.rotateAngleY = this.head.rotateAngleY + 0.5235988F;
		this.leftfin.rotateAngleX = this.head.rotateAngleX;
		this.fin2.rotateAngleY = this.head.rotateAngleY;
		this.fin2.rotateAngleX = this.head.rotateAngleX;
		this.rightarmlower.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 0.8F * par2 * 0.5F;
		this.rightarm.rotateAngleX = this.rightarmlower.rotateAngleX;
		this.rightarmlower.rotateAngleX = this.rightarm.rotateAngleX - 0.1745329F;
		this.leftarmlower.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 0.8F * par2 * 0.5F;
		this.leftarm.rotateAngleX = this.leftarmlower.rotateAngleX;
		this.leftarmlower.rotateAngleX = this.leftarm.rotateAngleX - 0.1745329F;
		this.tail1.rotateAngleZ = MathHelper.cos(par1 * 0.6162F) * 0.05F * par2;
		this.tail2.rotateAngleZ = MathHelper.cos(par1 * 0.6262F) * 0.05F * par2;
		this.tail3.rotateAngleZ = MathHelper.cos(par1 * 0.6362F) * 0.05F * par2;
		this.tail4.rotateAngleZ = MathHelper.cos(par1 * 0.6462F) * 0.05F * par2;
		this.tail5.rotateAngleZ = MathHelper.cos(par1 * 0.6562F) * 0.05F * par2;
		this.tail6.rotateAngleZ = MathHelper.cos(par1 * 0.6662F) * 0.05F * par2;
		this.tail7.rotateAngleZ = MathHelper.cos(par1 * 0.6762F) * 0.05F * par2;
		this.tail8.rotateAngleZ = MathHelper.cos(par1 * 0.6862F) * 0.05F * par2;

		float f6;
		float f7;

		if (this.swingProgress > -9990.0F)
		{
			f6 = this.swingProgress;
			f6 = 1.0F - this.swingProgress;
			f6 *= f6;
			f6 *= f6;
			f6 = 1.0F - f6;
			f7 = MathHelper.sin(f6 * (float)Math.PI);
			float f8 = MathHelper.sin(this.swingProgress * (float)Math.PI) * -(this.head.rotateAngleX - 0.7F) * 0.75F;

			this.rightarmlower.rotateAngleX = (float)((double)this.rightarmlower.rotateAngleX - ((double)f7 * 1.2D + (double)f8));
			this.rightarm.rotateAngleX = this.rightarmlower.rotateAngleX;
			this.rightarmlower.rotateAngleX = this.rightarmlower.rotateAngleX - 0.1745329F;
			this.rightarmlower.rotateAngleY += (this.body.rotateAngleY * 2.0F);
			this.rightarm.rotateAngleY = this.rightarmlower.rotateAngleY;
			this.rightarmlower.rotateAngleZ = (MathHelper.sin(this.swingProgress * (float)Math.PI) * -0.4F) + 0.0872665F;
			this.rightarm.rotateAngleZ = this.rightarmlower.rotateAngleZ;
		}
	}
}
